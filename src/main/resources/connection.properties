dbUrl = jdbc:postgresql://localhost:5433/social-network
dbUser = postgres
dbPassword = admin
dbDriver = org.postgresql.Driver

checkUser = SELECT * FROM users WHERE user_username = ? OR user_email = ?
registerUser = INSERT INTO users (user_username, user_password, user_name, user_lastname, user_email, user_birthday, user_creation_time, type_user_id, user_sex, user_enabled, user_avatar) VALUES(?, ?, ?, ?, ?, ?, ?, 2, ?, true, 'notiene')
loginUser = SELECT * from users WHERE user_username = ? AND user_password = ?
updateUser = UPDATE users SET user_name = ? , user_lastname = ? , user_email = ? , user_birthday = ? , user_sex = ? WHERE user_username = ?;
searchUsers = SELECT user_id, user_username, user_name, user_lastname, user_avatar, user_birthday, user_email, user_creation_time FROM users WHERE user_username LIKE ? OR user_name LIKE ? OR user_lastname LIKE ?;
addFriend = INSERT INTO friends (user_id1, user_id2, date) SELECT u.user_id, u2.user_id, now() FROM users u, users u2 WHERE u.user_id = ? AND u2.user_id = ?; INSERT INTO friends (user_id2, user_id1) SELECT u.user_id, u2.user_id FROM users u, users u2 WHERE u.user_id = ? AND u2.user_id = ?;
friendList = SELECT u.user_id, u.user_username, u.user_name, u.user_lastname, u.user_avatar, u.user_birthday FROM users u INNER JOIN friends f ON f.user_id2 = u.user_id INNER JOIN users u2 ON f.user_id1 = u2.user_id WHERE u2.user_username = ? AND u.user_enabled = TRUE;
searchFriends = SELECT u.user_id, u.user_username, u.user_name, u.user_lastname, u.user_avatar, u.user_birthday FROM users u INNER JOIN friends f ON f.user_id2 = u.user_id INNER JOIN users u2 ON f.user_id1 = u2.user_id WHERE u2.user_username = ? AND u.user_enabled = TRUE AND (u.user_username LIKE ? OR u.user_name LIKE ? OR u.user_lastname LIKE ?);
isFriend = SELECT friends_id from friends f INNER JOIN users u ON f.user_id1 = u.user_id INNER JOIN users u2 ON f.user_id2 = u2.user_id WHERE u2.user_id = ? AND u.user_id = ?
deleteFriend = DELETE FROM friends f USING users u, users u2 WHERE f.user_id1 = u.user_id AND u.user_id = ? AND f.user_id2 = u2.user_id AND u2.user_id = ?; DELETE FROM friends f USING users u, users u2 WHERE f.user_id2 = u2.user_id AND u2.user_id = ? AND f.user_id1 = u.user_id AND u.user_id = ?;
getUser = SELECT * FROM users WHERE user_username = ?
#post
getPosts = SELECT post_id, p.type_post_id, p.post_text, p.post_url, p.post_creation_time, u.user_username, u.user_name, u.user_lastname, u.user_avatar, u.user_id FROM post p INNER JOIN users u ON p.user_id = u.user_id WHERE p.user_id IN (SELECT f.user_id2 FROM friends f WHERE f.user_id1 = ?) OR p.user_id = ? ORDER BY post_creation_time DESC LIMIT ?;
getUserPosts = SELECT post_id, type_post_id, post_text, post_url, post_creation_time FROM post WHERE user_id = ? ORDER BY post_creation_time DESC
addPost = INSERT INTO post (user_id, type_post_id, post_text, post_url, post_creation_time) VALUES(?, ?, ?, null, now());
deletePost = DELETE FROM likes WHERE post_id = ?; DELETE FROM comments WHERE post_id = ?; DELETE FROM post WHERE user_id = ? AND post_id = ?;

insertLike=INSERT INTO likes (user_id, post_id, type_like_id) VALUES(?, ?, ?)
deleteLike=DELETE FROM likes WHERE user_id = ? AND like_id = ?;
updateLike=UPDATE likes SET type_like_id = ? WHERE user_id = ? AND like_id = ?;

getLikes=SELECT l.like_id, l.user_id, l.type_like_id, u.user_username, u.user_name, u.user_lastname FROM likes l INNER JOIN users u ON u.user_id = l.user_id WHERE post_id = ?;

getComments=SELECT c.comment_id, c.comment_text, c.comment_url, c.user_id, u.user_username, u.user_name, u.user_lastname FROM comments c INNER JOIN users u ON c.user_id = u.user_id WHERE c.post_id = ?;

insertComment=INSERT INTO comments (user_id, post_id, comment_text, comment_url) SELECT u.user_id, p.post_id, ?, ? FROM users u, post p WHERE p.post_id = ? AND u.user_id = ?;

deleteComment=DELETE FROM comments WHERE user_id = ? AND comment_id = ?;